name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  SECRET_KEY: 'django-insecure-*-f)8&%jk%mc2%!4qqi0m+=%-*i8$#ule@!_!n#s1k@xnl3fz5'
  DJANGO_LOG_LEVEL: ERROR
  DEBUG: False
  DATABASE_NAME: 'healthy_meals'
  TEST_DATABASE_NAME: 'test_healthy_meals'
  DATABASE_USER: postgres
  DATABASE_PASSWORD: postgres

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    # run postgres in a service container
    services:
      # container label is 'postgres'
      postgres:
        # image: postgres:16
        # # env:
        # #   POSTGRES_USER: postgres
        # #   POSTGRES_PASSWORD: postgres
        # #   POSTGRES_DB: ci_db_test
        # ports:
        #   - 5432:5432
        # options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        # using Docker Hub Image named postgres
        image: postgres
        # provide password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # health checks for waiting until postgres is ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: get the code from the repo
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        pytest --junitxml=reports/junit/junit.xml --html=reports/junit/index.html 
        coverage run -m pytest tests
        coverage xml
        coverage html
        genbadge coverage
        genbadge tests
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        DATABASE_HOST: postgres
